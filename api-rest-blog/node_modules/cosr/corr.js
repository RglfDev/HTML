import React, { useEffect, useState } from "react";

const Crud1 = () => {
  const [users, setUsers] = useState([]);
  const [file, setFile] = useState(null);
  const [isEdit, setIsEdit] = useState(null);
  const [form, setForm] = useState({
    name: "",
    email: "",
    age: "",
    gender: "",
  });
  const [errors, setErrors] = useState({});

  const validateForm = () => {
    const newErrors = {};

    if (!form.name.trim()) {
      newErrors.name = "plz enter a name";
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const fetchUsers = async () => {
    const res = await fetch(`http://localhost:5000/api/auth`, {
      method: "GET",
    });
    const data = await res.json();
    setUsers(data);
  };

  useEffect(() => {
    fetchUsers();
  }, []);

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!validateForm()) return;

    const newData = new FormData();
    newData.append("name", form.name);
    newData.append("email", form.email);
    newData.append("age", form.age);
    newData.append("gender", form.gender);
    if (file) {
      newData.append("file", file);
    }

    if (isEdit) {
      await fetch(`http://localhost:5000/api/auth/${isEdit}`, {
        method: "PUT",
        body: newData,
      });
      setIsEdit(null);
    } else {
      await fetch(`http://localhost:5000/api/auth`, {
        method: "POST",
        body: newData,
      });
    }
    fetchUsers();
    setForm({ name: "", email: "", age: "", gender: "" });
    setFile(null);
  };
  const handleChange = async (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };
  const handleEdit = async (user) => {
    setForm({
      name: user.name,
      email: user.email,
      age: user.age,
      gender: user.gender,
    });
    setIsEdit(user._id);
  };

  const handleDelete = async (id) => {
    await fetch(`http://localhost:5000/api/auth/${id}`, {
      method: `DELETE`,
    });
    fetchUsers();
  };

  return (
    <div>
      <center>
        <form onSubmit={handleSubmit}>
          <h2>{isEdit ? "Update" : "insert"}</h2>
          <br />
          <div>
            <input type="file" onChange={(e) => setFile(e.target.files[0])} />
          </div>
          <div>
            <input
              type="text"
              name="name"
              placeholder="name"
              value={form.name}
              onChange={handleChange}
            />
            <br />
            <small className="text-denger">{errors.name}</small>
          </div>
          <div>
            <input
              type="email"
              name="email"
              placeholder="email"
              value={form.email}
              onChange={handleChange}
            />
          </div>
          <div>
            <input
              type="number"
              name="age"
              placeholder="age"
              value={form.age}
              onChange={handleChange}
            />
          </div>
          <div>
            <input
              type="radio"
              name="gender"
              value="male"
              checked={form.gender === "male"}
              onChange={handleChange}
            />{" "}
            male
            <input
              type="radio"
              name="gender"
              value="female"
              checked={form.gender === "female"}
              onChange={handleChange}
            />{" "}
            female
          </div>
          <div>
            <input type="submit" value={isEdit ? "Update" : "Insert"} />
          </div>
        </form>
        <br />
        <br />
        <table cellPadding={10} cellSpacing={0} border={1}>
          <thead>
            <tr>
              <td>image</td>
              <td>name</td>
              <td>email</td>
              <td>age</td>
              <td>gender</td>
              <td colSpan={2}>actions</td>
            </tr>
          </thead>
          <tbody>
            {users.map((user) => (
              <tr key={user._id}>
                <td>
                  <img
                    src={`http://localhost:5000/uploads/${user.image}`}
                    alt="user image"
                    height={50}
                    width={50}
                  />
                </td>
                <td>{user.name}</td>
                <td>{user.email}</td>
                <td>{user.age}</td>
                <td>{user.gender}</td>
                <td>
                  <button onClick={() => handleEdit(user)}>Edit</button>
                </td>
                <td>
                  <button onClick={() => handleDelete(user._id)}>Delete</button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </center>
    </div>
  );
};

export default Crud1;
